apply plugin: 'com.android.application'
//wrap with try and catch so the build is working even if the signing stuff is missing
try {
    apply from: '../../../signing.gradle'
} catch (ex) {
}

android {
    compileSdkVersion setup.compileSdk
    buildToolsVersion setup.buildTools

    defaultConfig {
        minSdkVersion setup.minSdk
        targetSdkVersion setup.targetSdk
        versionCode 582
        versionName "5.8.2"

        setProperty("archivesBaseName", "-v$versionName-c$versionCode")
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"
            try {
                signingConfig signingConfigs.debug
            } catch (ex) {
            }
            minifyEnabled false
        }
        release {
            try {
                signingConfig signingConfigs.release
            } catch (ex) {
            }
            zipAlignEnabled true
            minifyEnabled false
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
//    compile fileTree(dir: 'libs', include: ['*.jar'])
//
//    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })

//  compile 'com.android.support:appcompat-v7:25.3.0'
//    compile 'com.android.support.constraint:constraint-layout:1.0.2'
//    testCompile 'junit:junit:4.12'
////


    compile project(':library')

    compile "com.android.support:design:${versions.supportLib}"
    compile "com.android.support:cardview-v7:${versions.supportLib}"

    // used to showcase how to load images

    // the sample uses more advanced functions of the fastadapter
    // https://github.com/mikepenz/FastAdapter/
    // used to generate the Open Source section
    // https://github.com/mikepenz/AboutLibraries
    compile('com.mikepenz:aboutlibraries:5.9.0@aar') {
        transitive = true
        exclude module: "fastadapter"
    }
    //used to provide different itemAnimators for the RecyclerView
    //https://github.com/mikepenz/ItemAnimators
    // used to provide the MiniDrawer to normal Drawer crossfade effect via a SlidingPane layout
    // --> https://github.com/mikepenz/MaterialDrawer/blob/develop/app/src/main/java/com/mikepenz/materialdrawer/app/MiniDrawerActivity.java
    // https://github.com/mikepenz/Crossfader
    // used to provide the two step crossfade DrawerLayout. Which allows to have a mini layout which transforms to a normal layout within the drawer
    // --> https://github.com/mikepenz/MaterialDrawer/blob/develop/app/src/main/java/com/mikepenz/materialdrawer/app/CrossfadeDrawerLayoutActvitiy.java
    // https://github.com/mikepenz/CrossfadeDrawerLayout

    // icon fonts used inside the sample
    // https://github.com/mikepenz/Android-Iconics
//
    

    compile 'com.google.android.gms:play-services-auth:10.2.1'
    compile 'com.google.firebase:firebase-auth:10.2.1'
    compile 'com.google.firebase:firebase-core:10.2.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.mikepenz:fastadapter-commons:2.1.0@aar'
    compile 'com.mikepenz:itemanimators:0.5.0@aar'
    compile 'com.mikepenz:crossfader:1.5.0@aar'
    compile 'com.mikepenz:crossfadedrawerlayout:1.0.0@aar'
    compile 'com.mikepenz:google-material-typeface:2.2.0.1@aar'
    compile 'com.mikepenz:fontawesome-typeface:4.6.0.3@aar'
    compile 'com.mikepenz:octicons-typeface:3.0.0.1@aar'
    compile 'com.android.support:support-v4:25.3.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
}
apply plugin: 'com.google.gms.google-services'